{"version":3,"file":"static/js/772.1d080c57.chunk.js","mappings":"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","sources":["components/Admin/PaymentCalendar.js","components/reseller/ResellerPanel.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction PaymentCalendar({ startDate, months, paymentMethod, onConfirm }) {\r\n\tconst [selectedDates, setSelectedDates] = useState([]);\r\n\r\n\t// Helper functions\r\n\tconst addDays = (date, days) => {\r\n\t\tconst result = new Date(date);\r\n\t\tresult.setDate(result.getDate() + days);\r\n\t\treturn result;\r\n\t};\r\n\r\n\tconst generateCalendar = () => {\r\n\t\tconst calendar = [];\r\n\t\tconst start = new Date(startDate);\r\n\r\n\t\tfor (let m = 0; m < months; m++) {\r\n\t\t\tconst currentMonth = new Date(\r\n\t\t\t\tstart.getFullYear(),\r\n\t\t\t\tstart.getMonth() + m,\r\n\t\t\t\t1\r\n\t\t\t);\r\n\t\t\tconst monthData = {\r\n\t\t\t\tmonth: currentMonth,\r\n\t\t\t\tmonthName: currentMonth.toLocaleString(\"default\", { month: \"long\" }),\r\n\t\t\t\tyear: currentMonth.getFullYear(),\r\n\t\t\t\tweeks: [],\r\n\t\t\t\tdays: [],\r\n\t\t\t};\r\n\r\n\t\t\tif (paymentMethod === \"weekly\") {\r\n\t\t\t\tlet currentWeekStart = new Date(currentMonth);\r\n\t\t\t\twhile (currentWeekStart.getMonth() === currentMonth.getMonth()) {\r\n\t\t\t\t\tmonthData.weeks.push(new Date(currentWeekStart));\r\n\t\t\t\t\tcurrentWeekStart = addDays(currentWeekStart, 7);\r\n\t\t\t\t}\r\n\t\t\t} else if (paymentMethod === \"daily\") {\r\n\t\t\t\tconst daysInMonth = new Date(\r\n\t\t\t\t\tcurrentMonth.getFullYear(),\r\n\t\t\t\t\tcurrentMonth.getMonth() + 1,\r\n\t\t\t\t\t0\r\n\t\t\t\t).getDate();\r\n\r\n\t\t\t\tfor (let d = 1; d <= daysInMonth; d++) {\r\n\t\t\t\t\tmonthData.days.push(\r\n\t\t\t\t\t\tnew Date(currentMonth.getFullYear(), currentMonth.getMonth(), d)\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tcalendar.push(monthData);\r\n\t\t}\r\n\r\n\t\treturn calendar;\r\n\t};\r\n\r\n\tconst calendar = generateCalendar();\r\n\r\n\tconst toggleDate = (date) => {\r\n\t\tconst dateStr = date.toISOString().split(\"T\")[0];\r\n\t\tsetSelectedDates((prev) =>\r\n\t\t\tprev.includes(dateStr)\r\n\t\t\t\t? prev.filter((d) => d !== dateStr)\r\n\t\t\t\t: [...prev, dateStr]\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleConfirm = () => {\r\n\t\tif (selectedDates.length === 0) {\r\n\t\t\talert(\"Please select at least one payment date\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tonConfirm(selectedDates);\r\n\t\tsetSelectedDates([]);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"p-4 border rounded-lg bg-white shadow-sm\">\r\n\t\t\t{calendar.map(({ month, monthName, year, weeks, days }, idx) => (\r\n\t\t\t\t<div key={idx} className=\"mb-6\">\r\n\t\t\t\t\t<h3 className=\"text-lg font-semibold mb-3\">\r\n\t\t\t\t\t\t{monthName} {year}\r\n\t\t\t\t\t</h3>\r\n\r\n\t\t\t\t\t{weeks.length > 0 && (\r\n\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t<h4 className=\"text-sm font-medium mb-2\">Weekly Payments:</h4>\r\n\t\t\t\t\t\t\t<div className=\"flex flex-wrap gap-2\">\r\n\t\t\t\t\t\t\t\t{weeks.map((week, i) => {\r\n\t\t\t\t\t\t\t\t\tconst dateStr = week.toISOString().split(\"T\")[0];\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => toggleDate(week)}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`px-3 py-1 rounded-md border text-sm ${\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedDates.includes(dateStr)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-blue-600 text-white border-blue-700\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"bg-white text-gray-800 border-gray-300 hover:bg-gray-100\"\r\n\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tWeek {i + 1}\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{days.length > 0 && (\r\n\t\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t\t<h4 className=\"text-sm font-medium mb-2\">Daily Payments:</h4>\r\n\t\t\t\t\t\t\t<div className=\"grid grid-cols-7 gap-1\">\r\n\t\t\t\t\t\t\t\t{days.map((day, i) => {\r\n\t\t\t\t\t\t\t\t\tconst dateStr = day.toISOString().split(\"T\")[0];\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\t\t\tkey={i}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => toggleDate(day)}\r\n\t\t\t\t\t\t\t\t\t\t\tclassName={`p-1 rounded-md text-xs text-center ${\r\n\t\t\t\t\t\t\t\t\t\t\t\tselectedDates.includes(dateStr)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t? \"bg-blue-600 text-white\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t: \"bg-white text-gray-800 hover:bg-gray-100\"\r\n\t\t\t\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{day.getDate()}\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\r\n\t\t\t<button\r\n\t\t\t\tonClick={handleConfirm}\r\n\t\t\t\tdisabled={selectedDates.length === 0}\r\n\t\t\t\tclassName={`mt-4 px-4 py-2 rounded-md text-white ${\r\n\t\t\t\t\tselectedDates.length > 0\r\n\t\t\t\t\t\t? \"bg-green-600 hover:bg-green-700\"\r\n\t\t\t\t\t\t: \"bg-gray-400 cursor-not-allowed\"\r\n\t\t\t\t}`}\r\n\t\t\t>\r\n\t\t\t\tConfirm {selectedDates.length} Payment\r\n\t\t\t\t{selectedDates.length !== 1 ? \"s\" : \"\"}\r\n\t\t\t</button>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default PaymentCalendar;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport PaymentCalendar from \"../Admin/PaymentCalendar\";\r\n\r\nfunction ResellerPanel() {\r\n\tconst [packages, setPackages] = useState([]);\r\n\tconst [customers, setCustomers] = useState([]);\r\n\tconst [selectedCustomer, setSelectedCustomer] = useState(null);\r\n\tconst [paymentStartDate, setPaymentStartDate] = useState(new Date());\r\n\tconst [paymentMonths, setPaymentMonths] = useState(1);\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchPackages();\r\n\t\tfetchCustomers();\r\n\t}, []);\r\n\r\n\tconst fetchPackages = async () => {\r\n\t\ttry {\r\n\t\t\tconst response = await axios.get(\"http://localhost:3001/api/packages\");\r\n\t\t\tsetPackages(response.data);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Failed to fetch packages\", err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst fetchCustomers = async () => {\r\n\t\ttry {\r\n\t\t\t// For demo, fetch all customers (in real app, filter by reseller)\r\n\t\t\tconst response = await axios.get(\r\n\t\t\t\t\"http://localhost:3001/api/users?role=customer\"\r\n\t\t\t);\r\n\t\t\tsetCustomers(response.data);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error(\"Failed to fetch customers\", err);\r\n\t\t}\r\n\t};\r\n\r\n\tconst selectCustomer = (customer) => {\r\n\t\tsetSelectedCustomer(customer);\r\n\t};\r\n\r\n\tconst handleConfirmPayment = (selectedDates) => {\r\n\t\t// For demo, just log the selected dates\r\n\t\tconsole.log(\"Confirmed payment dates for customer:\", selectedDates);\r\n\t\t// TODO: Call backend API to save payment confirmation for selectedCustomer\r\n\t\talert(\r\n\t\t\t\"Payment confirmed for customer \" +\r\n\t\t\t\t(selectedCustomer ? selectedCustomer.username : \"\") +\r\n\t\t\t\t\" on dates: \" +\r\n\t\t\t\tselectedDates.join(\", \")\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"p-8 max-w-5xl mx-auto bg-gray-50 min-h-screen\">\r\n\t\t\t<h1 className=\"text-4xl font-extrabold mb-8 text-center text-gray-900\">\r\n\t\t\t\tReseller Panel\r\n\t\t\t</h1>\r\n\r\n\t\t\t<div className=\"mb-10 p-6 border rounded-lg bg-white shadow-md\">\r\n\t\t\t\t<h2 className=\"text-2xl font-semibold mb-6\">Customers</h2>\r\n\t\t\t\t{customers.length === 0 ? (\r\n\t\t\t\t\t<p className=\"text-gray-600\">No customers available.</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<ul className=\"list-disc list-inside max-h-64 overflow-y-auto text-gray-700\">\r\n\t\t\t\t\t\t{customers.map((customer) => (\r\n\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\tkey={customer.id}\r\n\t\t\t\t\t\t\t\tclassName={`cursor-pointer px-3 py-2 rounded-md hover:bg-indigo-100 ${\r\n\t\t\t\t\t\t\t\t\tselectedCustomer && selectedCustomer.id === customer.id\r\n\t\t\t\t\t\t\t\t\t\t? \"font-bold text-indigo-700 bg-indigo-200\"\r\n\t\t\t\t\t\t\t\t\t\t: \"\"\r\n\t\t\t\t\t\t\t\t}`}\r\n\t\t\t\t\t\t\t\tonClick={() => selectCustomer(customer)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{customer.username}\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"mb-10 p-6 border rounded-lg bg-white shadow-md\">\r\n\t\t\t\t<h2 className=\"text-2xl font-semibold mb-6\">Packages</h2>\r\n\t\t\t\t{packages.length === 0 ? (\r\n\t\t\t\t\t<p className=\"text-gray-600\">No packages available.</p>\r\n\t\t\t\t) : (\r\n\t\t\t\t\tpackages.map((pkg) => (\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tkey={pkg.id}\r\n\t\t\t\t\t\t\tclassName=\"mb-6 p-6 border rounded-lg bg-gray-50 shadow-sm\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<h3 className=\"text-xl font-bold mb-2 text-gray-900\">\r\n\t\t\t\t\t\t\t\t{pkg.name}\r\n\t\t\t\t\t\t\t</h3>\r\n\t\t\t\t\t\t\t<p className=\"mb-2 text-gray-700\">{pkg.description}</p>\r\n\t\t\t\t\t\t\t<p className=\"mb-1\">\r\n\t\t\t\t\t\t\t\tPayment Method:{\" \"}\r\n\t\t\t\t\t\t\t\t<span className=\"font-semibold text-indigo-600\">\r\n\t\t\t\t\t\t\t\t\t{pkg.payment_method}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<p className=\"mb-2\">\r\n\t\t\t\t\t\t\t\tPayment Amount:{\" \"}\r\n\t\t\t\t\t\t\t\t<span className=\"font-semibold text-indigo-600\">\r\n\t\t\t\t\t\t\t\t\t${pkg.payment_amount}\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<h4 className=\"font-semibold mb-2\">Products:</h4>\r\n\t\t\t\t\t\t\t\t<ul className=\"list-disc list-inside text-gray-700\">\r\n\t\t\t\t\t\t\t\t\t{pkg.products.map((product, index) => (\r\n\t\t\t\t\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t\t\t\t\t{product.name} - ${product.price}\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\r\n\t\t\t{selectedCustomer && (\r\n\t\t\t\t<div className=\"mb-10 p-6 border rounded-lg bg-white shadow-md\">\r\n\t\t\t\t\t<h2 className=\"text-2xl font-semibold mb-6\">\r\n\t\t\t\t\t\tPayment Confirmation Calendar for {selectedCustomer.username}\r\n\t\t\t\t\t</h2>\r\n\t\t\t\t\t<label className=\"block mb-2 font-semibold\">Start Date:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tvalue={paymentStartDate.toISOString().substr(0, 10)}\r\n\t\t\t\t\t\tonChange={(e) => setPaymentStartDate(new Date(e.target.value))}\r\n\t\t\t\t\t\tclassName=\"mb-4 border border-gray-300 px-4 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label className=\"block mb-2 font-semibold\">Number of Months:</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tmin=\"1\"\r\n\t\t\t\t\t\tmax=\"12\"\r\n\t\t\t\t\t\tvalue={paymentMonths}\r\n\t\t\t\t\t\tonChange={(e) => setPaymentMonths(parseInt(e.target.value) || 1)}\r\n\t\t\t\t\t\tclassName=\"mb-4 border border-gray-300 px-4 py-2 rounded-md focus:outline-none focus:ring-2 focus:ring-indigo-500\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<PaymentCalendar\r\n\t\t\t\t\t\tstartDate={paymentStartDate}\r\n\t\t\t\t\t\tmonths={paymentMonths}\r\n\t\t\t\t\t\tpaymentMethod={\r\n\t\t\t\t\t\t\tpackages.length > 0 ? packages[0].payment_method : \"daily\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonConfirm={handleConfirmPayment}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ResellerPanel;\r\n"],"names":["_ref","startDate","months","paymentMethod","onConfirm","selectedDates","setSelectedDates","useState","addDays","date","days","result","Date","setDate","getDate","calendar","generateCalendar","start","m","currentMonth","getFullYear","getMonth","monthData","month","monthName","toLocaleString","year","weeks","currentWeekStart","push","daysInMonth","d","toggleDate","dateStr","toISOString","split","prev","includes","filter","_jsxs","className","children","map","_ref2","idx","length","_jsx","week","i","onClick","concat","day","handleConfirm","alert","disabled","packages","setPackages","customers","setCustomers","selectedCustomer","setSelectedCustomer","paymentStartDate","setPaymentStartDate","paymentMonths","setPaymentMonths","useEffect","fetchPackages","fetchCustomers","async","response","axios","get","data","err","console","error","customer","id","selectCustomer","username","pkg","name","description","payment_method","payment_amount","products","product","index","price","type","value","substr","onChange","e","target","min","max","parseInt","PaymentCalendar","log","join"],"sourceRoot":""}